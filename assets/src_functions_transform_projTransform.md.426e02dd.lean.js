import{_ as s,y as a,S as o,M as n}from"./chunks/framework.a6902a73.js";const f=JSON.parse('{"title":"坐标系转换","description":"","frontmatter":{},"headers":[],"relativePath":"src/functions/transform/projTransform.md","filePath":"src/functions/transform/projTransform.md"}'),t={name:"src/functions/transform/projTransform.md"},l=n(`<h1 id="坐标系转换" tabindex="-1">坐标系转换 <a class="header-anchor" href="#坐标系转换" aria-label="Permalink to &quot;坐标系转换&quot;">​</a></h1><p><a href="http://proj4js.org/" target="_blank" rel="noreferrer">proj4</a> 是一款将坐标从一个坐标系转换到另一个坐标系的 JavaScript 库，可将地理空间坐标从一个坐标参考系 (CRS) 转换为另一个坐标参考系 (CRS)。这包括制图投影和大地测量变换。</p><p><strong>参数：</strong></p><ul><li><code>GeoJson</code> 数据</li><li><code>metaData</code> 元数据的投影坐标，见下面常见属性。默认<code>EPSG:3857</code>。</li><li><code>afterData</code> 规定要素以哪种坐标显示，见下面常见属性。默认<code>EPSG:4326</code>。</li></ul><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>EPSG:4326</code></td><td>WGS84 地理坐标系</td></tr><tr><td><code>EPSG:3857</code></td><td>WGS 横轴墨卡托</td></tr><tr><td><code>EPSG:2000</code></td><td>国家2000 地理坐标系</td></tr><tr><td><code>EPSG:2000e</code></td><td>国家2000 120e 投影坐标系</td></tr></tbody></table><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>包含 <code>GeoJSON Feature</code> 的数据。</p><p><strong>示例：</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 引用 projTransform</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">projTransform</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">gmap-ol</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> geoJsonData </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{...};</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> metaData </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">EPSG:3857</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> afterData </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">EPSG:4326</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> geojsonFeature </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">projTransform</span><span style="color:#BABED8;">(geoJsonData</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> metaData</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> afterData)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,9),e=[l];function p(r,c,D,d,y,i){return a(),o("div",null,e)}const B=s(t,[["render",p]]);export{f as __pageData,B as default};
