import{_ as o,y as s,S as e,M as n}from"./chunks/framework.a6902a73.js";const F=JSON.parse('{"title":"View","description":"","frontmatter":{},"headers":[],"relativePath":"src/appendix/View.md","filePath":"src/appendix/View.md"}'),t={name:"src/appendix/View.md"},l=n(`<h1 id="view" tabindex="-1">View <a class="header-anchor" href="#view" aria-label="Permalink to &quot;View&quot;">​</a></h1><p><code>View</code>是一个地图组件，在初始化<code>Map</code>的时候需要指定一个<code>View</code>，创建<code>View</code>对象的时候，在构造函数中可以传递一个对象，用于指定地图的缩放等级、中心点，投影坐标系统等信息，下面来看下<code>View</code>中具体的属性参数和使用方法等。首先创建一个地图视图，如下所示：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> View </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ol/View</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">View</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">center</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">117.382411</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">39.523648</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">projection</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">EPSG:4326</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">zoom</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">minZoom</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">maxZoom</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><ul><li><em><strong>center</strong></em>：设置地图初始化的中心点，</li><li><em><strong>constrainRotation</strong></em>：旋转约束。<code>false</code>为未约束，<code>true</code>为未约束但是接近于0。数字限制了旋转到该值的数量。</li><li><em><strong>enableRotation</strong></em>：如果为<code>false</code>，则始终使用将旋转设置为零的旋转约束。如果启用为<code>false</code>，则没有效果。</li><li><em><strong>extent</strong></em>：设置地图的显示范围。</li><li><em><strong>constrainOnlyCenter</strong></em>：如果设置为<code>true</code>，范围约束将仅用于中心点，而不是整个范围。</li><li><em><strong>smoothExtentConstraint</strong></em>：如果设置为<code>true</code>,允许视图稍微超出范围。</li><li><em><strong>maxResolution</strong></em>：用于设置最大分辨率，一般和<code>minResolution</code> (或者<code>maxZoom</code>) 和<code>zoomFactor</code>一起使用。</li><li><em><strong>minResolution</strong></em>：用于设置最小分辨率。</li><li><em><strong>maxZoom</strong></em>：最大缩放等级。</li><li><em><strong>minZoom</strong></em>：最小缩放等级。</li><li><em><strong>multiWorld</strong></em>：如果设置为<code>false</code>，视图将受到约束。</li><li><em><strong>constrainResolution</strong></em>：如果为<code>true</code>，则视图在交互后将始终设置为最接近的缩放级别；<code>false</code>表示允许中间缩放级别。</li><li><em><strong>smoothResolutionConstraint</strong></em>：如果设置为<code>true</code>,允许视图稍微超出范围。</li><li><em><strong>showFullExtent</strong></em>：如果<code>showFullExtent</code>为<code>true</code>，则用户将能够缩小视图，使视口超过配置范围的高度或宽度，但不能同时超出这两个范围，从而允许显示完整范围。</li><li><em><strong>projection</strong></em>：设置投影坐标系，默认为<code>EPSG:3857</code>。</li><li><em><strong>resolution</strong></em>：设置分辨率。</li><li><em><strong>resolutions</strong></em>：设置分辨率数组。</li><li><em><strong>rotation</strong></em>：设置旋转角度。</li><li><em><strong>zoom</strong></em>：设置缩放级别。</li><li><em><strong>zoomFactor</strong></em>：用于计算分辨率的缩放因子。</li></ul><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><ul><li><em><strong>adjustCenter</strong></em>：将相对坐标添加到视图中心。将应用任何范围约束。</li><li><em><strong>adjustResolution</strong></em>：将视图分辨率乘以一个比率，可以选择使用锚点。将应用任何分辨率约束。</li><li><em><strong>adjustRotation</strong></em>：向视图添加旋转值，可以选择使用定位。将应用任何旋转约束。</li><li><em><strong>adjustZoom</strong></em>：向视图添加缩放级别，可以选择使用定位。将应用任何旋转约束。</li><li><em><strong>animate</strong></em>：向视图添加动画，主要用于设置zoom，center，rotation等值的变化，如view.animate({zoom: view.getZoom() + 1});。</li><li><em><strong>beginInteraction</strong></em>：通知视图交互已启动。</li><li><em><strong>cancelAnimations</strong></em>：取消动画。</li><li><em><strong>calculateExtent</strong></em>：根据传递的尺寸计算地图的范围。</li><li><em><strong>centerOn</strong></em>：以坐标和视图位置为中心。</li><li><em><strong>endInteraction</strong></em>：结束视图交互。</li><li><em><strong>fit</strong></em>：将地图缩放到指定的范围。</li><li><em><strong>getAnimating</strong></em>：判断视图正好在执行动画。</li><li><em><strong>getCenter</strong></em>：获取视图的中心点。</li><li><em><strong>getInteracting</strong></em>：判断地图是否正在交互，比如正在平移、缩放等。</li><li><em><strong>getMaxResolution</strong></em>：获取最大分辨率。</li><li><em><strong>getMaxZoom</strong></em>：获取最大缩放等级。</li><li><em><strong>getMinResolution</strong></em>：获取最小分辨率。</li><li><em><strong>getMinZoom</strong></em>：获取最小缩放等级。</li><li><em><strong>getProjection</strong></em>：获取投影坐标系。</li><li><em><strong>getResolution</strong></em>：获取分辨率。</li><li><em><strong>getResolutionForExtent</strong></em>：根据范围来获取分辨率。</li><li><em><strong>getResolutionForZoom</strong></em>：根据缩放等级来获取分辨率。</li><li><em><strong>getResolutions</strong></em>：获取分辨率。</li><li><em><strong>getRotation</strong></em>：获取当前旋转角度。</li><li><em><strong>getZoom</strong></em>：获取当前缩放级别。</li><li><em><strong>getZoomForResolution</strong></em>：根据分辨率获取缩放等级。</li><li><em><strong>setCenter</strong></em>：设置地图的中心点。</li><li><em><strong>setConstrainResolution</strong></em>：设置分辨率约束。</li><li><em><strong>setMaxZoom</strong></em>：设置最大缩放等级。</li><li><em><strong>setMinZoom</strong></em>：设置最小缩放等级。</li><li><em><strong>setResolution</strong></em>：设置分辨率。</li><li><em><strong>setRotation</strong></em>：设置旋转角度。</li><li><em><strong>setZoom</strong></em>：设置当前缩放等级。</li></ul>`,7),a=[l];function r(i,m,c,p,g,d){return s(),e("div",null,a)}const y=o(t,[["render",r]]);export{F as __pageData,y as default};
