import{_ as e,y as o,S as s,M as a}from"./chunks/framework.a6902a73.js";const D=JSON.parse('{"title":"Overlay","description":"","frontmatter":{},"headers":[],"relativePath":"src/appendix/Overlay.md","filePath":"src/appendix/Overlay.md"}'),l={name:"src/appendix/Overlay.md"},n=a(`<h1 id="overlay" tabindex="-1">Overlay <a class="header-anchor" href="#overlay" aria-label="Permalink to &quot;Overlay&quot;">​</a></h1><p><code>Overlay</code>可以将一个<code>html</code>元素添加到地图上，跟<code>Control</code>类似，相当于地图的一个控件，不过<code>Overlay</code>添加的元素不是固定的，而是可以随着地图移动而移动的。创建一个<code>Overlay</code>对象比较简单，在创建<code>Overlay</code>对象的时候指定一个元素，然后再设置<code>Overlay</code>显示的坐标点，并将<code>Overlay</code>添加到地图上。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Overlay </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ol/Overlay</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> popup </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Overlay</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">element</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">popup</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">popup</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPosition</span><span style="color:#BABED8;">([</span><span style="color:#F78C6C;">130.356</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">30.254</span><span style="color:#BABED8;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">olMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addOverlay</span><span style="color:#BABED8;">(popup)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><ul><li><em><strong>id</strong></em>：设置<code>Overlay</code>的ID，可以使用map的get<code>Overlay</code>ById获取到指定的<code>Overlay</code>。</li><li><em><strong>element</strong></em>：设置<code>Overlay</code>的元素。</li><li><em><strong>offset</strong></em>：用于设置元素的偏移量，参数为一个数组，数组中的第一个值表示水平方向的偏移，第二个值表示垂直方向的偏移。</li><li><em><strong>position</strong></em>：设置<code>Overlay</code>显示的坐标点。</li><li><em><strong>positioning</strong></em>：设置<code>Overlay</code>在<code>position</code>处的位置，可以设置的位置包括：<code>bottom-left</code>，<code>bottom-center</code>，<code>bottom-right</code>，<code>center-left</code>，<code>center-center</code>，<code>center-right</code>，<code>top-left</code>，<code>top-center</code>，<code>top-right</code>，默认为<code>top-left</code>。</li><li><em><strong>stopEvent</strong></em>：阻止事件冒泡。</li><li><em><strong>insertFirst</strong></em>：如果设置为true，当同一容器中添加了<code>Overlay</code>和控件时，将<code>Overlay</code>显示在控件的下边。</li><li><em><strong>autoPan</strong></em>：平移时，如果超出了地图一点点，将自动设置<code>Overlay</code>显示在地图范围类。</li><li><em><strong>autoPanAnimation</strong></em>：设置<code>autoPan</code>时的动画。</li><li><em><strong>autoPanMargin</strong></em>：设置<code>autoPan</code>生效时距地图边界的距离。</li><li><em><strong>className</strong></em>：设置<code>Overlay</code>的<code>CSS</code>类名。</li></ul><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><ul><li><em><strong>getElement</strong></em>：获取<code>Overlay</code>的元素对象。</li><li><em><strong>getId</strong></em>：获取<code>Overlay</code>设置的ID。</li><li><em><strong>getMap</strong></em>：获取<code>Overlay</code>所在的地图。</li><li><em><strong>getOffset</strong></em>：获取<code>Overlay</code>的偏移量。</li><li><em><strong>getPosition</strong></em>：获取<code>Overlay</code>的位置。</li><li><em><strong>getPositioning</strong></em>：获取<code>Overlay</code>设置位置的方向。</li><li><em><strong>setElement</strong></em>：设置<code>Overlay</code>的元素。</li><li><em><strong>setMap</strong></em>：设置添加<code>Overlay</code>的地图。</li><li><em><strong>setOffset</strong></em>：设置<code>Overlay</code>的偏移量。</li><li><em><strong>setPosition</strong></em>：设置<code>Overlay</code>的位置。</li><li><em><strong>setPositioning</strong></em>：设置<code>Overlay</code>位置的方向。</li></ul>`,7),t=[n];function r(c,p,d,i,y,m){return o(),s("div",null,t)}const F=e(l,[["render",r]]);export{D as __pageData,F as default};
